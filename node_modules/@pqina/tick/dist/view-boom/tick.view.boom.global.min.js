/* eslint-disable */

/*
 * @pqina/tick v1.8.2 - Counters Made Easy
 * Copyright (c) 2023 PQINA - https://github.com/pqina/tick/
 */
!function(e,t){"use strict";e.Tick||(e.Tick=[]),e.Tick.push(["view","boom",function(){if(!e)var e={};var n=function(){var e=arguments.length>0&&arguments[0]!==t?arguments[0]:API,n=e.Data.request,r=e.Date.performance,u=e.View,a=u.rooter,i=u.destroyer,o=u.drawer,l=u.updater,c=u.styler,f="undefined"!=typeof window?window.AudioContext||window.webkitAudioContext:null,s=f?new f:null,d=function(e,t,n){e.decodeAudioData(t,function(e){n(e)})},p=function(e,t,r){(Array.isArray(t)?t:[t]).forEach(function(t){n(t,function(t){d(e,t,r)},function(e){},function(e){e.responseType="arraybuffer"})})},v=function(e,t){var n=e.createBufferSource();return n.buffer=t,n},h=function(e){if(s&&null!==e.style.sample&&e.style.sample.length){if(!e.audioLoaded)return e.volume=s.createGain(),e.volume.connect(s.destination),void p(s,e.style.sample,function(t){t&&!e.buffer&&(e.buffer=t,e.audioLoaded=!0)});if(e.value!==e.lastValue){var t=v(s,e.buffer);t.connect(e.volume),e.volume.gain.value=e.style.volume;var n=r(),u=n-e.lastDraw;u<e.style.pitchThreshold?e.currentPitch=Math.min(e.style.pitchMax,e.currentPitch+e.style.pitchStep):e.currentPitch=1,e.lastDraw=n,t.playbackRate.value=e.currentPitch,t.start(s.currentTime),e.lastValue=e.value}}};return function(e){var t={audioLoaded:!1,buffer:null,lastDraw:0,currentPitch:1,volume:null,lastValue:null};return Object.assign({},a(t,e,"boom"),l(t),c(t,{sample:null,volume:.5,pitchThreshold:1e3,pitchStep:.05,pitchMax:1.35}),i(t),o(t,h))}};return e.exports=n,e.exports.identifier={name:"boom",type:"view"},e.exports}()])}(window);